/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |---|  Y  |  U   |  I  |  O  |  P  |   BKSP    |
// | ESC  |  A  |  S  |  D  |  F  |  G  |---|  H  |  J   |  K  |  L  |  ;  |    '      |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |---|  N  |  M   |  ,  |  .  |  /  | SHFT(RET) |
//                         | CTRL | LWR | SPC | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp ESC &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &mt RSHFT RET
                        &kp LCTRL  &mo 1 &kp SPACE &mo 2  &kp RALT
                        >;
                };

                lower_layer {
// ----------------------------------------------------------------------------------
// |  ~   |  !  |  @  |  #  |  $  |  %  |---|  ^  |  &  |  *  |  (  |  )  |   DEL   |
// |  `   |  1  |  2  |  3  |  4  |  5  |---|  6  |  7  |  8  |  9  |  0  |    |    |
// |  (   |     |     |     |  {  |  [  |---|  ]  |  }  |  \  |  _  |  +  |    )    |
//                         |     |     | SPC | ADJ |     |
                        bindings = <
   &kp TAB &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT  &kp CARET &kp AMPS &kp STAR &kp MINUS &kp EQUAL &kp DEL
   &trans  &kp N1   &kp N2 &kp N3   &kp N4   &kp N5     &kp N6    &kp N7   &kp N8   &kp N9    &kp N0    &kp PIPE
   &kp LPAR  &trans  &trans  &trans  &kp LBRC &kp LBKT  &kp RBKT  &kp RBRC  &kp BSLH  &kp UNDER &kp PLUS &kp RPAR
                                 &trans      &trans       &kp SPACE       &mo 3       &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// | F12 | F1 | F2 | F3 | F4 | F5 |---| F6 | F7 | F8 | F9 | F10 | F11 |
// |     |    |    |    |    |    |---|    |    |    |    |     |     |
// |     |    |    |    |    |    |---|    |    |    |    |     |     |
//                   |     | ADJ | SPACE |    |     |
                        bindings = <
   &kp F12 &kp F1 &kp F2 &kp F3 &kp F4 &kp F5     &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11
	 &trans &trans &trans &trans &trans &trans	    &trans &trans	&trans &trans	&trans &trans	
	 &trans &trans &trans &trans &trans &trans	    &trans &trans	&trans &trans	&trans &trans	
									&trans      &mo 3       &kp SPACE        &trans      &trans
                        >;
                };

                adjust_layer {
// -----------------------------------------------------------------------------------------
// | SLEEP |  BT1  |  BT2  |  BT3  |  BT4  |  BT5  |---| BTC | USB |    |     |   | MUTE |
// | BACK  | HOME  |  B-UP |  B-DN | LIGHT |       |---| LFT | DWN | UP | RGT |   | VOLU |
// | POWER |SEARCH |       |       | BOOT  | RESET |---| | SCR-DWN | SCR-UP   | | | VOLD |
//                                    |     |     |     |     |     |
                        bindings = <
//	 &kp K_SLEEP &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4     &bt BT_CLR &out OUT_TOG &trans &trans &trans &kp K_MUTE
//	 &kp K_BACK &kp C_AC_HOME &kp C_BRI_UP &kp C_BRI_DN &kp C_BKLT_TOG &trans         &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &kp K_VOL_UP
//	 &kp K_PWR &kp C_AC_SEARCH &trans &trans &bootloader &reset                       &trans &kp K_SCROLL_UP &kp K_SCROLL_DOWN &trans &trans &kp K_VOL_DN
   &kp F12 &kp F1 &kp F2 &kp F3 &kp F4 &kp F5     &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11
	 &trans &trans &trans &trans &trans &trans	    &trans &trans	&trans &trans	&trans &trans	
	 &trans &trans &trans &trans &trans &trans	    &trans &trans	&trans &trans	&trans &trans	
															&trans &trans &trans &trans &trans
                        >;
                };
        };
};
