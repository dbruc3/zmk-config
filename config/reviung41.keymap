/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>


/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |---|  Y  |  U   |  I  |  O  |  P  |   BKSP    |
// | ESC  |  A  |  S  |  D  |  F  |  G  |---|  H  |  J   |  K  |  L  |  ;  |    '      |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |---|  N  |  M   |  ,  |  .  |  /  | SHFT(RET) |
//                         | ALT | LWR | SPC | RSE  | CTRL |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp ESC &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &mt RSHFT RET
                        &kp LALT  &mo 1 &kp SPACE &mo 2  &kp RCTRL
                        >;
                };

                lower_layer {
// ----------------------------------------------------------------------------------
// | ~  |  !  |  @  |  #  |  $  |  %  |---|  ^  |  &  |  *  |  _  |  +  |    DEL    |
// | `  |  _  |  +  |  {  |  (  |  [  |---|  ]  |  )  |  }  |  -  |  =  |     |     |
// |    | UNDO| CUT | COPY|PASTE| REDO|---|     |     |  <  |  >  |  \  | SHFT(RET) |
//                       |     |     | SPC | ADJ |     |
                        bindings = <
   &kp TILDE &kp EXCL  &kp AT      &kp HASH &kp DLLR &kp PRCNT      &kp CARET &kp AMPS &kp N8    &kp UNDER  &kp PLUS  &kp DEL
   &kp GRAVE &kp MINUS &kp KP_PLUS &kp LBRC &kp LPAR &kp LBKT       &kp RBKT  &kp RPAR &kp RBRC  &kp MINUS &kp EQUAL &kp PIPE
   &trans &kp K_UNDO &kp K_CUT &kp K_COPY &kp K_PASTE &kp K_REDO        &kp HOME  &kp END  &kp LT &kp GT &kp BSLH &mt RSHFT RET
                                 &trans      &trans       &kp SPACE        &mo 3       &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |     |     |     |     |     |     |   |     |     |     |     |     | DEL |
// |     |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |     |
// | F12 | F1  | F2  |  F3 | F4  | F5  |   | F6  | F7  | F8  | F9  | F10 | F11 |
//                       |     | ADJ | BKSP |    |     |
                        bindings = <
   &trans &none &none &none &none &none                         &none &none &none &none &none    &kp DEL
   &trans &kp N1    &kp N2    &kp N3    &kp N4    &kp N5        &kp N6    &kp N7    &kp N8    &kp N9    &kp N0    &trans
   &kp F12 &kp F1   &kp F2  &kp F3  &kp F4  &kp F5       &kp F6    &kp F7    &kp F8    &kp F9   &kp F10   &kp F11
                                &trans      &mo 3       &kp BSPC        &trans      &trans
                        >;
                };

                adjust_layer {
// -----------------------------------------------------------------------------------------
// |SLEEP|  BT1  |  BT2  |  BT3  |  BT4  |  BT5  |   |  6  |  7  | MUTE | VOLU | VOLD |  |
// | LOCK |  ON  |  BRI UP  |  BRI DN  |  BKLGHT  |  5  |   |  LEFT  |  DOWN  |  UP  |  RIGHT  |  |  |
// |POWER|  OFF  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL |
//                       |     |  |  |    |     |
//                                              |     |     |     |     |     |
                        bindings = <
   &kp K_SLEEP &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3   &bt BT_SEL 4        &kp N6    &kp N7    &kp K_MUTE    &kp K_VOL_DN    &kp K_VOL_UP    &trans
   &kp K_LOCK &ext_power EP_ON    &kp C_BRI_UP    &kp C_BRI_DN    &kp C_BKLT_TOG    &kp N5        &kp LEFT    &kp DOWN    &kp UP    &kp RIGHT    &kp N0    &kp DEL
   &kp K_PWR &ext_power EP_OFF    &kp N2    &kp N3    &kp N4    &kp N5        &kp N6    &kp N7    &kp N8    &kp N9    &kp N0    &kp DEL
                                                             &trans      &trans       &tog 3        &trans      &trans
                        >;
                };
        };
};
